# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: "ubuntu:xenial"

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  TWINE_USERNAME: "__token__"
  TWINE_PASSWORD: "$PYPI_TOKEN"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - pip-cache

before_script:
  - apt-get update -yqq
  - apt-get install -yqq --no-install-recommends python3-dev wget curl git
  - wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py
  - python3 get-pip.py --user
  - export PIP_CACHE_DIR="/opt/cache/pip"
  - python3 -m pip install virtualenv==20.0.21
  - echo $CI_COMMIT_TAG

stages:
  - test
  - deploy

test:
  stage: test
  script:
    - python3 -m pip install tox setuptools docutils codecov
    - tox --version
    - tox -e py
    - codecov
  artifacts:
    paths:
      - test-results
    reports:
      junit: test-results/*.xml

flake8:
  stage: test
  script:
    - python3 -m pip install tox setuptools docutils
    - tox -e flake8
  artifacts:
    paths:
      - test-results

doc:
  stage: test
  script:
    - python3 -m pip install -r docs/requirements.txt
    - python3 setup.py develop
    - python3 setup.py doc
    - mv docs/_build/html htmldoc
  artifacts:
    paths:
      - htmldoc

publish_rtd:
  stage: deploy
  dependencies:
  - test
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/
      when: always
  script:
    - 'curl --insecure -d "" -X POST -H "Authorization: Token $RTD_TOKEN" https://readthedocs.org/api/v3/projects/algebraicnumber/versions/latest/builds/'

publish_pypi:
  stage: deploy
  dependencies:
  - test
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/
      when: always
  script:
    - python3 -m pip install twine wheel docutils
    - python3 setup.py sdist bdist_wheel
    - twine upload dist/*

# pages:
#   stage: deploy
#   dependencies:
#   - test
#   - doc
#   script:
#   - cp -r tests/public .
#   - mv htmlcov public/
#   - mv htmldoc public/
#   artifacts:
#     paths:
#     - public
#     expire_in: 30 days
#   only:
#   - master

