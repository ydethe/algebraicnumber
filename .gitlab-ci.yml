# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: "ubuntu:jammy"

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  TWINE_USERNAME: "__token__"
  TWINE_PASSWORD: "$PYPI_TOKEN"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - pip-cache

before_script:
  - export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true
  - echo "tzdata tzdata/Areas select Europe" > preseed.txt && echo "tzdata tzdata/Zones/Europe select Paris" >> preseed.txt
  - debconf-set-selections preseed.txt
  - apt-get update -yqq
  - apt-get install -yqq --no-install-recommends graphviz python3-pip python3.10-dev wget curl git
  - echo $CI_COMMIT_TAG

stages:
  - test
  - deploy

test:
  stage: test
  script:
    - python3 -m pip install nox codecov
    - nox -s tests coverage
    - codecov
  artifacts:
    paths:
      - build/htmldoc/tests
      - build/htmldoc/coverage
    reports:
      junit: build/*.xml

doc:
  stage: test
  script:
    - python3 -m pip install nox
    - nox -s docs
  artifacts:
    paths:
      - build/htmldoc/AlgebraicNumber

publish_doc:
  stage: deploy
  dependencies:
  - test
  # rules:
  #   - if: $CI_COMMIT_TAG =~ /^v.*/
  #     when: always
  script:
    - cp -r AlgebraicNumb tests coverage public
  artifacts:
    paths:
      - public

publish_pypi:
  stage: deploy
  dependencies:
  - test
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/
      when: always
  script:
    - python3 -m pip install nox twine
    - nox -s build
    - twine upload dist/*
    